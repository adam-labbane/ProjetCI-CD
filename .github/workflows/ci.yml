name: Fullstack CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  REACT_APP_SERVER_URL: http://backend:8000

jobs:
  test_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Backend Tests
        run: pytest --cov=. --cov-report=term

  build_and_test_fullstack:
    needs: test_backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend deps
        working-directory: ./frontend
        run: npm ci

      - name: Build Docker stack
        run: docker compose up -d --build

      - name: Wait for services
        run: sleep 10

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          wait-on: http://localhost:3000
          wait-on-timeout: 60

      - name: Stop Docker stack
        run: docker compose down

      - name: Upload coverage reports (optional)
        uses: codecov/codecov-action@v3
        with:
          directory: ./frontend
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy_frontend:
    needs: build_and_test_fullstack
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install deps and build React app
        working-directory: ./frontend
        run: |
          npm ci
          npm run build
        env:
          REACT_APP_SERVER_URL: ${{ env.REACT_APP_SERVER_URL }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/build

  deploy_pages:
    needs: deploy_frontend
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy_backend_vercel:
    needs: test_backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./Backend

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./Backend

      - name: Deploy to prod
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./Backend
